from telebot.apihelper import ApiTelegramException
from apscheduler.schedulers.background import BackgroundScheduler
from apscheduler.jobstores.sqlalchemy import SQLAlchemyJobStore
from datetime import datetime, timedelta

from src.models import Schedule, ScheduleStatus, MOSCOW_TZ
from src.database import SessionLocal
from sqlalchemy import select

import os

jobstores = {
    'default': SQLAlchemyJobStore(url=os.getenv("DATABASE_URL")) 
}

scheduler = BackgroundScheduler(jobstores=jobstores, timezone=MOSCOW_TZ)

horses_list = ["–£–º–∫–∞", "–¢—É–º–∞–Ω", "–ì–æ—Å—É–¥–∞—Ä—ã–Ω—è"]

def send_wo_reminder(bot, user_id, horse_name, scheduled_time):
    try:
        if horse_name in horses_list:
            ksk = "–ö–°–ö –í–æ–ª—å—Ç"
        else:
            ksk = "–ö–°–ö –ë–∏—Ç—Ü–∞"
        text = (f"üîî–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–µ!\n\n"
                f"–í–∞—à–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –Ω–∞—á–Ω–µ—Ç—Å—è –≤ **{scheduled_time.strftime('%H:%M')}** –≤ {ksk}!"
                f"–Æ–ª—è –∏ {horse_name} –±—É–¥—É—Ç –∂–¥–∞—Ç—å –í–∞—Åüê¥üë©üèº")
        bot.send_message(user_id, text, parse_mode="Markdown")
    except ApiTelegramException as e:
        print(f"–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –Ω–µ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∫–ª–∏–µ–Ω—Ç—É c id {user_id}. –û—à–∏–±–∫–∞: {e}")
    except Exception as e:
        print(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è: {e}")

REMIND_HOURS_BEFORE = 2
SCAN_INTERVAL_MINUTES = 15

def schedule_reminder():
    with SessionLocal as ses:
        now = datetime.now(MOSCOW_TZ)
        start = now + timedelta(hours=REMIND_HOURS_BEFORE)
        end = start + timedelta(minutes=SCAN_INTERVAL_MINUTES)

        assoc = select(Schedule).where(Schedule.scheduled_datetime.between(start, end)).where(Schedule.train_status == ScheduleStatus.scheduled)
        wo_list = ses.execute(assoc).scalars().all()

        for wo in wo_list:
            job_id = f"reminder_training_{wo.schedule_id}"
            if scheduler.get_job(job_id):
                print(f"‚ÑπÔ∏è –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ {wo.schedule_id} —É–∂–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º.")
                continue
            reminder_time = wo.scheduled_datetime - timedelta(hours=REMIND_HOURS_BEFORE)

            scheduler.add_job(
                send_wo_reminder,
                trigger='date',
                run_date=reminder_time,
                args=[
                    wo.user_id, wo.scheduled_datetime, wo.horse.horse_name
                ],
                id=job_id,
                replace_existing=True
            )    