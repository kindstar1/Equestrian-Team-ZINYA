from sqlalchemy import select, func, and_

from src.database import SessionLocal

from src.keyboards import generate_stars_keyboard
from src.models import Command
from src.models import Command, MyStates
from src.config import SUPPORT_BOT, ADMIN_ID
from src.models import Users, UserRole, UserStatus, Review
from telebot import types

commands = [
    types.BotCommand("menu", "–ú–µ–Ω—é"),
    types.BotCommand("sign", "–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–æ–±–Ω—É—é —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É ‚úçüèª"),
    types.BotCommand("info", "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–∞–Ω–¥–µ üìù"), # –±—É–¥—É—Ç –ø—Ä–µ–¥–ª–∞–≥–∞—Ç—å—Å—è —É–∑–Ω–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –∏ —Å–≤—è–∑–∞—Ç—å—Å—è —Å —Ç—Ä–µ–Ω–µ—Ä–æ–º, –¥–µ—Ç—Å–∫–∏–π –ª–∞–≥–µ—Ä—å
    types.BotCommand("location", "–ì–¥–µ –º—ã –Ω–∞—Ö–æ–¥–∏–º—Å—è üìç"),
    types.BotCommand("trainings", "–ú–æ–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ üèáüèø"), 
    types.BotCommand("camp", "–î–µ—Ç—Å–∫–∏–π –ª–∞–≥–µ—Ä—å ‚õ∫"), # —Å—Å—ã–ª–∫–∞ –Ω–∞ –Æ–ª–∏–Ω —Å–∞–π—Ç? –≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–µ–¥–∑–∞–ø–∏—Å—å –≤ –ª–∏—Å—Ç –æ–∂–∏–¥–∞–Ω–∏—è - –≤ –∞–¥–º–∏–Ω–∫–µ –ø—Ä–æ–¥—É–º–∞—Ç—å –≤—ã–∑–æ–≤ –≤—Å–µ–π –∏–Ω—Ñ—ã –ø–æ –∑–∞–ø–∏—Å–∞–≤—à–∏–º—Å—è
    types.BotCommand("review", "–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å üí¨"), # –±—É–¥—É—Ç –ø—Ä–µ–¥–ª–∞–≥–∞—Ç—å—Å—è –∫–Ω–æ–ø–∫–∏ –æ—Å—Ç–∞–∏–≤—Ç—å –æ—Ç–∑—ã–≤ –∏ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç–∑—ã–≤—ã (–ª–æ–Ω–≥—Ä–∏–¥–æ–º)
    types.BotCommand("support", "–°–≤—è–∑–∞—Ç—å—Å—è —Å —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫–æ–π ‚õë"), # –Ω–∞–ø–∏—Å–∞—Ç—å –ê–ë –ø–æ –ø—Ä–æ–±–ª–µ–º–µ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞
]
cmd_str= [
    '/menu',
    '/sign',
    '/info',
    '/location',
    '/trainings',
    '/camp',
    '/review',
    '/support',
]

markup_remover = types.ReplyKeyboardRemove()

def back_to_menu(bot, message):
    cid = message.chat.id
    tg_id = message.from_user.id
    bot.send_message(cid, "–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é. –ß—Ç–æ –í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?", reply_markup=markup_remover)
    bot.delete_state(tg_id, cid)

def start_signing_flow(bot, message):
    cid = message.chat.id
    tg_id = message.from_user.id
    bot.set_state(tg_id, MyStates.get_faq, cid)
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    btn1 = types.KeyboardButton("–î–∞")
    btn2 = types.KeyboardButton("–ù–µ—Ç")
    btn3 = types.KeyboardButton("–£–∑–Ω–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å")
    btn4 = types.KeyboardButton("–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô")
    markup.add(btn1, btn2, btn3, btn4)
    bot.send_message(
        cid,
        "–î–ª—è –∑–∞–ø–∏—Å–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –ø–∞—Ä—É –≤–æ–ø—Ä–æ—Å–æ–≤. –ì–æ—Ç–æ–≤—ã?",
        reply_markup=markup,
    )

def request_review(bot, message):
        tg_id = message.from_user.id
        cid = message.chat.id
        ses = SessionLocal()
        random_func = func.random()
        stmt = select(Review).where(and_(
            Review.stars >= 4,
            Review.text.is_not(None),  
            Review.text != '')).order_by(random_func).limit(1)
        random_review = ses.execute(stmt).scalar_one_or_none()
        review_text = f"–û—Ü–µ–Ω–∫–∞ {'‚≠ê' * random_review.stars}\n\n" \
                          f"\"{random_review.text}\""
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        btn1 = types.KeyboardButton("–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –µ—â–µ –æ—Ç–∑—ã–≤—ãüëÄ")
        btn2 = types.KeyboardButton("–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô")
        markup.add(btn1, btn2)
        bot.send_message(cid, review_text, reply_markup=markup)
        ses.close()

def know_info_about_camp(bot, message):
        cid = message.chat.id
        tg_id = message.from_user.id
        bot.delete_state(tg_id, cid)
        markup = types.InlineKeyboardMarkup()
        zinyacamp = types.InlineKeyboardButton(text="–£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –ø—Ä–æ –ª–∞–≥–µ—Ä—å", url='https://zinyacamp.ru/#start')
        markup.add(zinyacamp)
        try:
            with open('src/images/camp_z.png', 'rb') as photo:
                bot.send_photo(
                    chat_id=cid,
                    photo=photo, caption="–î–≤–∞ —Ä–∞–∑–∞ –≤ –≥–æ–¥ –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–æ–≤–æ–¥–∏—Ç –¥–µ—Ç—Å–∫–∏–π –ª–∞–≥–µ—Ä—å –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –≤—Å–∞–¥–Ω–∏–∫–æ–≤üêé", reply_markup=markup)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞: {e}. –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–∞—Ä—Ç–Ω–∫—É, —à–∞–≥ –ø—Ä–æ–ø—É—â–µ–Ω")
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True, row_width=2)
        btn1 = types.KeyboardButton("–ü–æ–ø–∞—Å—Ç—å –≤ –ª–∏—Å—Ç –æ–∂–∏–¥–∞–Ω–∏—è")
        btn2 = types.KeyboardButton("–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô")
        markup.add(btn1, btn2)
        bot.send_message(
            cid, '–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:', 
            reply_markup=markup)


def register_common_handlers(bot):


    @bot.message_handler(state=MyStates.greeting)
    def remember_user(message):
        ses = SessionLocal()
        tg_name = message.from_user.first_name
        tg_id = message.from_user.id
        cid = message.chat.id
        with bot.retrieve_data(tg_id, cid) as data:
            data["full_name"] = message.text
        full_name = data["full_name"]
        if tg_id == 111111111:
            user = Users(user_id=tg_id, full_name=full_name, username = tg_name, role = UserRole.admin)
            bot.send_message(cid,
            f"–ü—Ä–∏–≤–µ—Ç, –Æ–ª—è! –¢—ã –∑–∞—à–ª–∞ –≤ –∞–¥–º–∏–Ω–∫—É –±–æ—Ç–∞. –û—Ç–∫—Ä–æ–π –º–µ–Ω—é –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–πüîΩ")
            ses.add(user)
            ses.commit()
        else:
            user = Users(user_id=tg_id, full_name=full_name, username = tg_name, role = UserRole.student, status = UserStatus.inactive)
            ses.add(user)
            ses.commit()
            bot.send_message(
                cid,
                f"–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ–π–¥–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ! –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, —á—Ç–æ —è —É–º–µ—é, –æ—Ç–∫—Ä–æ–π –º–µ–Ω—éüîΩ",
            )
        bot.delete_state(tg_id, cid)


    @bot.message_handler(state=MyStates.support)
    def save_support_request(message):
        cid = message.chat.id
        tg_id = message.from_user.id
        username = message.from_user.username
        text = message.text
        if "/" in text:
            bot.delete_state(tg_id, cid)
        else:
            with bot.retrieve_data(tg_id, cid) as data:
                data["support_req"] = message.text
                support_message = (
                    f"üö® –ù–æ–≤–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –≤ —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫—É!\n\n"
                    f"–ù–∏–∫ –≤ —Ç–≥: {username}\n"
                    f"ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {tg_id}\n"
                    "----------------------------------\n"
                    f"–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã: {data.get('support_req')}\n"
                    )
                bot.send_message(SUPPORT_BOT, support_message)
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
            btn1 = types.KeyboardButton("–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô")
            markup.add(btn1)
            bot.send_message(
                cid,
                "–í–∞—à –∑–∞–ø—Ä–æ—Å –ø—Ä–∏–Ω—è—Ç! –í –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è —Ç–µ—Ö. —Å–µ—Ü–∏–∞–ª–∏—Å—Ç –µ–≥–æ —Ä–∞—Å—Å–º–æ—Ç—Ä–∏—Ç –∏ —É—Å—Ç—Ä–∞–Ω–∏—Ç –Ω–µ–ø–æ–ª–∞–¥–∫–∏.",
                reply_markup=markup
            )
            bot.delete_state(tg_id, cid)


    @bot.message_handler(state=MyStates.get_faq)
    def handle_faq_answer(message):
        cid = message.chat.id
        tg_id = message.from_user.id
        if message.text == "–ù–µ—Ç":
            bot.send_message(cid, "–í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å, –∫–∞–∫ –±—É–¥–µ—Ç–µ –≥–æ—Ç–æ–≤—ã :)")
            bot.delete_state(tg_id, cid)
            back_to_menu(bot, message)
        elif message.text == "–î–∞":
            with bot.retrieve_data(tg_id, cid) as data:
                check_id_client = data.get("id")
            if check_id_client == tg_id:
                bot.send_message(
                    cid, "–í–∞—à–∏ –æ—Ç–≤–µ—Ç—ã —É–∂–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã, –¥–æ–∂–¥–∏—Ç–µ—Å—å, –ø–æ–∫–∞ —Ç—Ä–µ–Ω–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –í–∞–º–∏"
                )
            else:
                markup = types.ReplyKeyboardMarkup(
                    resize_keyboard=True, one_time_keyboard=True
                )
                btn1 = types.KeyboardButton("–Ø")
                btn2 = types.KeyboardButton("–†–µ–±–µ–Ω–æ–∫")
                markup.add(btn1, btn2)
                bot.send_message(
                    cid,
                    "–ö—Ç–æ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç –∑–∞–Ω–∏–º–∞—Ç—å—Å—è: –í—ã –∏–ª–∏ –í–∞—à —Ä–µ–±–µ–Ω–æ–∫?",
                    reply_markup=markup,
                )
                bot.set_state(tg_id, MyStates.get_person, cid)
        elif message.text == "–£–∑–Ω–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å":
            cost_info(message)
        elif message.text == "–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô":
            back_to_menu(bot, message)
        else:
            bot.send_message(cid, "–ö–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏.")


    @bot.message_handler(state=MyStates.get_person)
    def info_client(message):
        cid = message.chat.id
        tg_id = message.from_user.id
        if message.text == "–Ø":
            with bot.retrieve_data(tg_id, cid) as data:
                data["person"] = "–ó–∞–ø—Ä–æ—Å —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω –≤—Å–∞–¥–Ω–∏–∫–æ–º"
            bot.send_message(cid, "–ö–∞–∫ –í–∞—Å –∑–æ–≤—É—Ç?", reply_markup=markup_remover)
            bot.set_state(tg_id, MyStates.client, cid)
        elif message.text == "–†–µ–±–µ–Ω–æ–∫":
            with bot.retrieve_data(tg_id, cid) as data:
                data["person"] = (
                    "–ó–∞–ø—Ä–æ—Å —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω —Ä–æ–¥–∏—Ç–µ–ª–µ–º. –ó–∞–Ω–∏–º–∞—Ç—å—Å—è –ø–ª–∞–Ω–∏—Ä—É–µ—Ç —Ä–µ–±–µ–Ω–æ–∫"
                )
            bot.send_message(cid, "–ö–∞–∫ –í–∞—Å –∑–æ–≤—É—Ç?")
            bot.set_state(tg_id, MyStates.parent, cid)
        elif message.text == "–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô":
            back_to_menu(bot, message)
            bot.delete_state(tg_id, cid)

    @bot.callback_query_handler(func=lambda call: call.data.startswith('rate_'), state=MyStates.awaiting_stars)
    def handle_stars(call):
        cid = call.message.chat.id
        uid = call.from_user.id
        stars = int(call.data.split('_')[1])
        with bot.retrieve_data(uid, cid) as data:
            data['stars'] = stars   
        bot.answer_callback_query(call.id, f"–í–∞—à–∞ –æ—Ü–µ–Ω–∫–∞: {'‚≠ê' * stars}")
        if stars <= 2:
            text = "–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, —á—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫?"
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True, row_width=2)
            btn = types.KeyboardButton("–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô")
            markup.add(btn)
            bot.send_message(cid, text, reply_markup=markup)
            bot.set_state(uid, MyStates.awaiting_text, cid)         
        else:    
            text = "–¢–µ–ø–µ—Ä—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –æ—Ç–∑—ã–≤ —Ç–µ–∫—Å—Ç–æ–º"
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True, row_width=2)
            btn = types.KeyboardButton("–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô")
            markup.add(btn)
            bot.send_message(cid, text, reply_markup=markup)
            bot.set_state(uid, MyStates.awaiting_text, cid)

    @bot.message_handler(state=MyStates.awaiting_text)
    def handle_review_text(message):
        cid = message.chat.id
        uid = message.from_user.id
        review_text = message.text
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True, row_width=2)
        btn = types.KeyboardButton("–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô")
        markup.add(btn)
    
        with bot.retrieve_data(uid, cid) as data:
            stars = data.get('stars', None) 
        if stars is None:
            bot.send_message(cid, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ: /review", reply_markup=markup)
            return
        ses = SessionLocal()
        if review_text == "–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô":
            try:
                new_review = Review(
                    stars=stars)
                ses.add(new_review)
                ses.commit()
                bot.send_message(cid, "‚úÖ –°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –æ—Ü–µ–Ω–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞.")
                back_to_menu(bot, message)
            except Exception as e:
                ses.rollback()
                bot.send_message(cid, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –æ—Ü–µ–Ω–∫–∏.", reply_markup=markup)
            finally:
                ses.close()
        elif review_text in cmd_str:
            try:
                new_review = Review(
                    stars=stars)
                ses.add(new_review)
                ses.commit()
                bot.send_message(cid, "‚úÖ –°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –æ—Ü–µ–Ω–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞.\n–í—ã–∑–æ–≤–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –ø–æ–≤—Ç–æ—Ä–Ω–æ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞")
            except Exception as e:
                ses.rollback()
                bot.send_message(cid, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –æ—Ü–µ–Ω–∫–∏.", reply_markup=markup)
            finally:
                ses.close()
        
        else:
            try:
                new_review = Review(
                    stars=stars,
                    text=review_text
                )
                ses.add(new_review)
                ses.commit()
                bot.send_message(cid, "‚úÖ –°–ø–∞—Å–∏–±–æ! –í–∞—à–∏ –æ—Ü–µ–Ω–∫–∞ –∏ –æ—Ç–∑—ã–≤ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.", reply_markup=markup)
            except Exception as e:
                ses.rollback()
                bot.send_message(cid, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –æ—Ç–∑—ã–≤–∞.", reply_markup=markup)
            finally:
                ses.close()
        bot.delete_state(uid, cid)

    @bot.message_handler(state=MyStates.contact_to_yulia)
    def handle_contact_text(message):
        cid = message.chat.id
        tg_id = message.from_user.id
        text = message.text 
        with bot.retrieve_data(tg_id, cid) as data:
            data["request"] = text
        username = message.from_user.username
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô")
        markup.add(btn1)
        if text == "–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô":
            bot.send_message(cid,"–û—Ç–º–µ–Ω–∏–ª –∑–∞–ø—Ä–æ—Å.",)
            back_to_menu(bot, message)
        elif text in cmd_str:
            bot.send_message(
                cid,
                "–û—Ç–º–µ–Ω–∏–ª –∑–∞–ø—Ä–æ—Å. –í—ã–∑–æ–≤–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∫–æ–º–∞–Ω–¥—É –ø–æ–≤—Ç–æ—Ä–Ω–æ")
        else:    
            admin_message = (
                f"üìù–° —Ç–æ–±–æ–π —Ö–æ—á–µ—Ç —Å–≤—è–∑–∞—Ç—å—Å—è —É—á–µ–Ω–∏–∫!\n\n"
                f"–ù–∏–∫ –≤ —Ç–≥: @{username}\n"
                "----------------------------------\n"
                f"–°—É—Ç—å –∑–∞–ø—Ä–æ—Å–∞: {data.get('request', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')}")
            bot.send_message(ADMIN_ID, admin_message)
            bot.send_message(
                cid,
                "–ü—Ä–∏–Ω—è—Ç–æ! –Ø –≤—Å–µ —É–∂–µ –ø–µ—Ä–µ–¥–∞–ª —Ç—Ä–µ–Ω–µ—Ä—É. –û–∂–∏–¥–∞–π—Ç–µüôÇ",
                reply_markup=markup,
            )
        bot.delete_state(tg_id, cid)

#  –•–µ–Ω–¥–ª–µ—Ä—ã –¥–ª—è –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é

    @bot.message_handler(commands=["start"])
    def greeting(message):
        ses = SessionLocal()
        tg_id = message.from_user.id
        cid = message.chat.id
        user = ses.query(Users).filter_by(user_id=tg_id).first()
        if user is None:
            bot.send_message(cid,
            f"–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –∫–æ–º–∞–Ω–¥—ã ZINYA EQ. –ü—Ä–µ–¥—Å—Ç–∞–≤—å—Å—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞: ")
            bot.set_state(tg_id, MyStates.greeting, cid)
        else:
            bot.send_message(cid,
            f"–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º! –ß—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ, –æ—Ç–∫—Ä–æ–π –º–µ–Ω—éüîΩ")
    

    @bot.message_handler(commands=["sign"])
    def signing_from_command(message):
        start_signing_flow(bot, message)
    
    @bot.message_handler(commands=["menu"])
    def menu(message):
        cid = message.chat.id
        tg_id = message.from_user.id
        bot.send_message(cid, "–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é. –ß—Ç–æ –í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?", reply_markup=markup_remover)
        bot.delete_state(tg_id, cid)
    
    @bot.message_handler(commands=["info"])
    def info_about_team(message):
        cid = message.chat.id
        tg_id = message.from_user.id
        bot.delete_state(tg_id, cid)
        photo_paths = [
        'src/images/—é–ª—è.png',
        'src/images/sobina.png',
        'src/images/sobina2.png']
        try:
            media = []
            for path in photo_paths:
                file = open(path, 'rb')
                media.append(types.InputMediaPhoto(file))
            if media:
                bot.send_media_group(chat_id=cid, media=media)
        except Exception as e:
            print(f"–û–®–ò–ë–ö–ê: –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ç–æ: {e}")
        info_text = """–ó–∞–Ω–∏–º–∞—é—Å—å —Å —Ç–µ–º–∏, –∫–æ–º—É –Ω–µ–∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ ¬´–∫–∞—Ç–∞–Ω–∏–µ¬ª –Ω–∞ –ª–æ—à–∞–¥–∏, –∫—Ç–æ —Ö–æ—á–µ—Ç –Ω–∞—É—á–∏—Ç—å—Å—è –≥—Ä–∞–º–æ—Ç–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å —Å—Ä–µ–¥—Å—Ç–≤–∞–º–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ –≤ –ø–æ—Å–ª–µ–¥—É—é—â–µ–º —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è –≤ —Å–ø–æ—Ä—Ç–µ (–≤ —Ç–æ–º —á–∏—Å–ª–µ –ª—é–±–∏—Ç–µ–ª—å—Å–∫–æ–º).–ù–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–µ –≤—ã –Ω–µ –æ—Å—Ç–∞—ë—Ç–µ—Å—å –æ–¥–∏–Ω –Ω–∞ –æ–¥–∏–Ω —Å –ª–æ—à–∞–¥—å—é, –Ω–∞ –ø—Ä–æ—Ç—è–∂–µ–Ω–∏–∏ –≤—Å–µ–≥–æ –∑–∞–Ω—è—Ç–∏—è –ø–æ–ª—É—á–∞–µ—Ç–µ –º–Ω–æ–∂–µ—Å—Ç–≤–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π –¥–ª—è –æ—Ç—Ä–∞–±–æ—Ç–∫–∏.

–í–æ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–∏–º–µ—Ä–æ–≤ —Ç–æ–≥–æ, —á—Ç–æ –º—ã —Å —É—á–µ–Ω–∏–∫–∞–º–∏ –æ—Å–≤–∞–∏–≤–∞–µ–º –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞—Ö: –±–∞–ª–∞–Ω—Å –∏ —Ä–∏—Ç–º –ª–æ—à–∞–¥–∏, –∏–º–ø—É–ª—å—Å, –ø—Ä–æ–≤–æ–¥–∏–º–æ—Å—Ç—å, —Ä–∞–±–æ—Ç–∞ —Å–æ —Å–≥–∏–±–∞–Ω–∏—è–º–∏, –ø–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏, –ø–æ–ª—É–æ–¥–µ—Ä–∂–∫–∞–º–∏, —Ä–∞—Å—Å–ª–∞–±–ª–µ–Ω–∏–µ –ª–æ—à–∞–¥–∏ –ø–æ–¥ –≤–µ—Ä—Ö–æ–º, –¥–∏—Å—Ç–∞–Ω—Ü–∏–∏ –∏ —Ä–∞—Å—á–µ—Ç –≤ –∫–æ–Ω–∫—É—Ä–µ, –ø–æ–¥—ä–µ–∑–¥ –∫ –±–∞—Ä—å–µ—Ä—É, –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –ø—Ä—ã–∂–∫–æ–≤–æ–π –ø–æ—Å–∞–¥–∫–∏, —Ä–∞–±–æ—Ç—É –º—è–≥–∫–æ–π –∏ ¬´–∂–∏–≤–æ–π¬ª —Ä—É–∫–æ–π, –Ω–∞–≤—ã–∫ ¬´—á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å¬ª –ª–æ—à–∞–¥—å; –≤—ã—è–≤–ª—è–µ–º –∑–∞–∂–∏–º—ã –≤ –ø–æ—Å–∞–¥–∫–µ –∏ –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ –∏—Ö —É—Å—Ç—Ä–∞–Ω—è–µ–º.

<b>–í –∫–∞–∫–∏—Ö —Å–ª—É—á–∞—è—Ö –º—ã —Å—Ä–∞–±–æ—Ç–∞–µ–º—Å—è?</b>
‚úÖ –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å —Å—Ç—Ä–µ–º–ª–µ–Ω–∏–µ –æ—Å–≤–æ–∏—Ç—å –∫–æ–Ω–Ω—ã–π —Å–ø–æ—Ä—Ç –Ω–∞ –±–æ–ª–µ–µ –≥–ª—É–±–æ–∫–æ–º —É—Ä–æ–≤–Ω–µ, –æ—Ç–∫—Ä—ã—Ç—å –¥–ª—è —Å–µ–±—è —Ç–æ–Ω—á–∞–π—à–∏–π –º–∏—Ä –º–Ω–æ–≥–æ–≥—Ä–∞–Ω–Ω–æ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –ª–æ—à–∞–¥—å—é.
‚úÖ –ï—Å–ª–∏ –ø–æ–¥—Ö–æ–¥ —Ç—Ä–µ–Ω–µ—Ä–∞ ¬´—Ä–∞–∑ –≤ 10 –º–∏–Ω—É—Ç –¥–∞—Ç—å —É–∫–∞–∑–∞–Ω–∏–µ –æ —Å–º–µ–Ω–µ –∞–ª–ª—é—Ä–∞¬ª –≤–∞—Å —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –Ω–µ —É—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç.
‚úÖ –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞—É—á–∏—Ç—å—Å—è –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ –ø—Ä—ã–≥–∞—Ç—å, —Å—á–∏—Ç–∞—Ç—å –¥–∏—Å—Ç–∞–Ω—Ü–∏–∏ –∏ –≤–∏–¥–µ—Ç—å —Ä–∞—Å—á—ë—Ç.
‚úÖ –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è –∏–º–µ–Ω–Ω–æ –≤ —Å–ø–æ—Ä—Ç–µ (–≤ —Ç–æ–º —á–∏—Å–ª–µ –ª—é–±–∏—Ç–µ–ª—å—Å–∫–æ–º), –∞ –Ω–µ –∫–∞—Ç–∞—Ç—å—Å—è –Ω–∞ –ª–æ—à–∞–¥–∏.

–¢–∞–∫–∂–µ –æ–¥–Ω–æ–∑–Ω–∞—á–Ω–æ —Å–º–æ–≥—É –≤–∞–º –ø–æ–º–æ—á—å, –µ—Å–ª–∏ –ø–æ—Å–ª–µ –Ω–µ—É–¥–∞—á–Ω–æ–≥–æ –ø–∞–¥–µ–Ω–∏—è –≤—ã –∏—Å–ø—ã—Ç—ã–≤–∞–µ—Ç–µ —Å—Ç—Ä–∞—Ö –ø—Ä–∏ –µ–∑–¥–µ –≤–µ—Ä—Ö–æ–º, –Ω–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç –Ω–µ–≥–æ –∏–∑–±–∞–≤–∏—Ç—å—Å—è.

üèÜ –ü–æ –º–µ—Ä–µ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –≤—Å–∞–¥–Ω–∏–∫–∞ –≤–æ–∑–º–æ–∂–Ω—ã –≤—ã–µ–∑–¥—ã –Ω–∞ —Å—Ç–∞—Ä—Ç—ã. 

üèïÔ∏è–î–≤–∞–∂–¥—ã –≤ –≥–æ–¥ –ø—Ä–æ–≤–æ–∂—É –¥–µ—Ç—Å–∫–∏–π –∫–æ–Ω–Ω—ã–π –ª–∞–≥–µ—Ä—å –≤ –ü–æ–¥–º–æ—Å–∫–æ–≤—å–µ.

<b>üë©üèº–ö–æ—Ä–æ—Ç–∫–æ –æ–±–æ –º–Ω–µ:</b>
–í –∫–æ–Ω–Ω–æ–º —Å–ø–æ—Ä—Ç–µ –Ω–∞ –ø—Ä–æ—Ç—è–∂–µ–Ω–∏–∏ 15 –ª–µ—Ç. –¢—Ä–µ–Ω–∏—Ä—É—é –Ω–∞ —Å–≤–æ–µ–º –≤—ã—Å–æ–∫–æ–º (172 —Å–º –≤ —Ö–æ–ª–∫–µ) –∏ –∞–±—Å–æ–ª—é—Ç–Ω–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ–º –º–µ—Ä–∏–Ω–µ –ª–∞—Ç–≤–∏–π—Å–∫–æ–π –ø–æ—Ä–æ–¥—ã.
–û–±—É—á–∞–ª–∞—Å—å –≤ —Ç–æ–º —á–∏—Å–ª–µ –∑–∞ –≥—Ä–∞–Ω–∏—Ü–µ–π, –Ω–∞ –±–∞–∑–µ –∫–æ–Ω–Ω–æ-—Å–ø–æ—Ä—Ç–∏–≤–Ω—ã—Ö –∫–ª—É–±–æ–≤ –ì–µ—Ä–º–∞–Ω–∏–∏ –∏ –ê–≤—Å—Ç—Ä–∏–∏."""
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True, row_width=2)
        btn1 = types.KeyboardButton("–£–∑–Ω–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å")
        btn2 = types.KeyboardButton("–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–æ–±–Ω—É—é —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É")
        btn3 = types.KeyboardButton("–°–≤—è–∑–∞—Ç—å—Å—è —Å —Ç—Ä–µ–Ω–µ—Ä–æ–º")
        btn4 = types.KeyboardButton("–£–∑–Ω–∞—Ç—å –ø—Ä–æ –¥–µ—Ç—Å–∫–∏–π –ª–∞–≥–µ—Ä—å")
        btn5 = types.KeyboardButton("–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô")
        markup.add(btn1, btn2, btn3, btn4, btn5)
        bot.send_message(
            cid,
            info_text,
            reply_markup=markup, parse_mode='HTML'
        )
    
    @bot.message_handler(commands=["support"])
    def get_support(message):
        cid = message.chat.id
        tg_id = message.from_user.id
        tg_name = message.from_user.first_name
        bot.delete_state(tg_id, cid)
        bot.send_message(
            cid,
            f"–ü—Ä–∏–≤–µ—Ç, {tg_name}! –≠—Ç–æ —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫–∞ –±–æ—Ç–∞ ZINYA. –û–ø–∏—à–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —á—Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å? –ï—Å–ª–∏ –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –±–æ—Ç–∞ —Ç—ã –∑–∞–º–µ—Ç–∏–ª –ø—Ä–æ–±–ª–µ–º—É/–æ—à–∏–±–∫—É - —Ä–∞—Å—Å–∫–∞–∂–∏ –º–Ω–µ –æ –Ω–µ–π:", 
            reply_markup=markup_remover
        )
        bot.set_state(tg_id, MyStates.support, cid)
    
    @bot.message_handler(commands=['location'])
    def get_location(message):
        cid = message.chat.id
        tg_id = message.from_user.id
        bot.delete_state(tg_id, cid)
        markup_volte = types.InlineKeyboardMarkup()
        markup_bitza = types.InlineKeyboardMarkup()
        
        location_button_2 = types.InlineKeyboardButton(text="–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –∫–∞—Ä—Ç–µ", url='https://yandex.ru/maps/-/CLeWB4or')
        markup_volte.add(location_button_2) 
        try:
            with open('src/images/volte.png', 'rb') as photo:
                bot.send_photo(
                    chat_id=cid,
                    photo=photo, caption="–ó–∞–Ω—è—Ç–∏—è –ø—Ä–æ—Ö–æ–¥—è—Ç –≤ –ö–°–ö –í–æ–ª—å—Çüìç (–ú–æ—Å–∫–≤–∞, –ø–æ—Å.–û—Å—Ç–∞—Ñ—å–µ–≤–∞)", reply_markup=markup_volte)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞: {e}. –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–∞—Ä—Ç–Ω–∫—É, —à–∞–≥ –ø—Ä–æ–ø—É—â–µ–Ω")
       
        location_button = types.InlineKeyboardButton(text="–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –∫–∞—Ä—Ç–µ", url='https://yandex.ru/maps/-/CHdj788V')
        markup_bitza.add(location_button) 
        try:
            with open('src/images/–ë–∏—Ç—Ü–∞.jpg', 'rb') as photo:
                bot.send_photo(
                    chat_id=cid,
                    photo=photo, caption="–ê —Ç–∞–∫–∂–µ –≤ –ö–°–ö –ë–∏—Ç—Ü–∞üìç (—Å—Ç.–º. –ß–µ—Ä—Ç–∞–Ω–æ–≤—Å–∫–∞—è)", reply_markup=markup_bitza)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞: {e}. –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–∞—Ä—Ç–Ω–∫—É, —à–∞–≥ –ø—Ä–æ–ø—É—â–µ–Ω")
        
        
# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–≤–æ–∏—Ö –∑–∞–Ω—è—Ç–∏–π

    @bot.message_handler(commands=["trainings"])
    def my_trainings(message):
        ses = SessionLocal()
        cid = message.chat.id
        tg_id = message.from_user.id

# –§—É–Ω–∫—Ü–∏—è –æ—Å—Ç–∞–≤–∏—Ç—å\–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç–∑—ã–≤—ã
    @bot.message_handler(commands=["review"])
    def review(message):
        cid = message.chat.id
        tg_id = message.from_user.id
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True, row_width=2)
        btn1 = types.KeyboardButton("–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç–∑—ã–≤—ã")
        btn2 = types.KeyboardButton("–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤")
        markup.add(btn1, btn2)
        bot.send_message(
            cid, '–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:', 
            reply_markup=markup, parse_mode='HTML'
        )
# –§—É–Ω–∫—Ü–∏—è –£–∑–Ω–∞—Ç—å –∏–Ω—Ñ–æ –ø—Ä–æ –¥–µ—Ç—Å–∫–∏–π –ª–∞–≥–µ—Ä—å
    @bot.message_handler(commands=["camp"])
    def info_about_camp_from_menu(message):
       know_info_about_camp(bot, message)
        
# –°–∞–º—ã–µ –æ–±—â–∏–µ —Ö–µ–Ω–¥–ª–µ—Ä—ã

    @bot.message_handler(func=lambda message: message.text == Command.SIGNING)
    def signing_from_button(message):
        start_signing_flow(bot, message)

    
    @bot.message_handler(func=lambda message: message.text == Command.KNOW_COST)
    def cost_info(message):
        tg_id = message.from_user.id
        cid = message.chat.id
        bot.send_message(
            cid,
            "–°—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–æ–±–Ω–æ–≥–æ –∑–∞–Ω—è—Ç–∏—è - 5000 —Ä—É–±.\n–î–∞–ª–µ–µ —Ä–∞–±–æ—Ç–∞ –≤–µ–¥–µ—Ç—Å—è –ø–æ –∞–±–æ–Ω–µ–º–µ–Ω—Ç—É: \n- 6 –∑–∞–Ω—è—Ç–∏–π - 28 800 —Ä—É–±. (—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ 4 800 —Ä—É–±.)\n- 8 –∑–∞–Ω—è—Ç–∏–π - 36‚Äô000 (—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ 4‚Äô500)\n- 10 –∑–∞–Ω—è—Ç–∏–π - 42‚Äô000 (—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ 4‚Äô200)\n- 12 –∑–∞–Ω—è—Ç–∏–π - 48‚Äô000 (—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ 4‚Äô000)\n–°—Ä–æ–∫–∏ –¥–µ–π—Å—Ç–≤–∏—è - 6, 8, 10 –∏ 12 –Ω–µ–¥–µ–ª—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ. –ù–∞ –ø–µ—Ä–∏–æ–¥ –æ—Ç—ä–µ–∑–¥–æ–≤ –∏–ª–∏ –±–æ–ª–µ–∑–Ω–∏ –∞–±–æ–Ω–µ–º–µ–Ω—Ç—ã –∑–∞–º–æ—Ä–∞–∂–∏–≤–∞—é—Ç—Å—è", reply_markup=markup_remover
        )
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        btn1 = types.KeyboardButton("–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–æ–±–Ω—É—é —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É")
        btn2 = types.KeyboardButton("–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô")
        markup.add(btn1, btn2)
        bot.send_message(cid, "–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)
        bot.delete_state(tg_id, cid)

    @bot.message_handler(func=lambda message: message.text == Command.GO_TO_MENU)
    def return_to_menu_button(message):
        back_to_menu(bot, message)

    @bot.message_handler(func=lambda message: message.text == Command.REQUEST_REVIEW)
    def request_review_from_menu(message):
        request_review(bot, message)
    
    @bot.message_handler(func=lambda message: message.text == Command.AGAIN_REQUEST_REVIEW)
    def request_review_again(message):
        request_review(bot, message)

    @bot.message_handler(func=lambda message: message.text == Command.SEND_REVIEW)
    def send_review(message):
        cid = message.chat.id
        text = '–û—Ü–µ–Ω–∏—Ç–µ —Ç—Ä–µ–Ω–µ—Ä–∞, –≤—ã–±—Ä–∞–≤ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–≤–µ–∑–¥: '
        bot.send_message(cid, text, reply_markup=generate_stars_keyboard())
        tg_id = message.from_user.id
        bot.set_state(tg_id, MyStates.awaiting_stars, cid)

    @bot.message_handler(func=lambda message: message.text == Command.ADD_TO_AWATING_LIST)
    def end_faq_client(message):
        tg_id = message.from_user.id
        cid = message.chat.id
        username = message.from_user.username
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        btn1 = types.KeyboardButton("–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô")
        markup.add(btn1)
        ses = SessionLocal()
        user = ses.get(Users, tg_id)
        if user.want_to_camp: 
            bot.send_message(cid, "–í—ã —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –ª–∏—Å—Ç –æ–∂–∏–¥–∞–Ω–∏—è... –ö–æ–≥–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ—è–≤–∏—Ç—Å—è, –∫–æ–º–∞–Ω–¥–∞ —Å –í–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è!", reply_markup=markup,)
        else:
            admin_message = (
            f"üîî‚õ∫–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –≤ –ª–∏—Å—Ç –æ–∂–∏–¥–∞–Ω–∏—è!\n\n"
            f"–ù–∏–∫ –≤ —Ç–≥: @{username}\n"
            "----------------------------------\n")
            bot.send_message(ADMIN_ID, admin_message)
            user.want_to_camp = True
            ses.commit()
            ses.close()
            bot.send_message(
            cid,
            "–í—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –ª–∏—Å—Ç –æ–∂–∏–¥–∞–Ω–∏—è! –ö–æ–≥–¥–∞ –ø–æ—è–≤–∏—Ç—Å—è –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–æ –ª–∞–≥–µ—Ä—å, –∫–æ–º–∞–Ω–¥–∞ —Å–≤—è–∂–µ—Ç—Å—è —Å –í–∞–º–∏!",
            reply_markup=markup,)


    @bot.message_handler(func=lambda message: message.text == Command.CAMP_INFO)
    def info_capm_from_team(message):
        know_info_about_camp(bot, message)

    @bot.message_handler(func=lambda message: message.text == Command.–°ONTACT_TO_ZINYA)
    def contact_to_yulia(message):
        cid = message.chat.id
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        btn1 = types.KeyboardButton("–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô")
        markup.add(btn1)
        text = '–ß—Ç–æ –º–Ω–µ –ø–µ—Ä–µ–¥–∞—Ç—å —Ç—Ä–µ–Ω–µ—Ä—É? –ù–∞–ø–∏—à–∏ –Ω–∏–∂–µ‚úçüèª'
        bot.send_message(cid, text, reply_markup=markup)
        tg_id = message.from_user.id
        bot.set_state(tg_id, MyStates.contact_to_yulia, cid)      
