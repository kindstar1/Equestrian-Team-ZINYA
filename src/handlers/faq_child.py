from telebot import types
from src.models import MyStates
from src.keyboards import generate_schedule_keyboard
from src.handlers.common import back_to_menu
from src.config import ADMIN_ID
from src.handlers.common import markup_remover

# –¶–µ–ø–æ—á–∫–∞ –≤–æ–ø—Ä–æ—Å–æ–≤ –¥–ª—è —Å–±–æ—Ä–∞ –∏–Ω—Ñ–æ—Ä–º–∞–∏–∏ –æ —Ä–µ–±–µ–Ω–∫–µ
def register_child_faq_handlers(bot):
    @bot.message_handler(state=MyStates.parent)
    def get_name_child(message):
        cid = message.chat.id
        tg_id = message.from_user.id
        with bot.retrieve_data(tg_id, cid) as data:
            data["parent_name"] = message.text
        bot.send_message(cid, "–ö–∞–∫ –∑–æ–≤—É—Ç –í–∞—à–µ–≥–æ —Ä–µ–±–µ–Ω–∫–∞? –í–≤–µ–¥–∏—Ç–µ –∏–º—è:", reply_markup=markup_remover)
        bot.set_state(tg_id, MyStates.get_name_chld, cid)


    @bot.message_handler(state=MyStates.get_name_chld)
    def get_age_child(message):
        cid = message.chat.id
        tg_id = message.from_user.id
        with bot.retrieve_data(tg_id, cid) as data:
            data["child_name"] = message.text
        bot.send_message(cid, "–°–∫–æ–ª—å–∫–æ –ª–µ—Ç –í–∞—à–µ–º—É —Ä–µ–±–µ–Ω–∫—É? –í–≤–µ–¥–∏—Ç–µ —Ü–∏—Ñ—Ä—É:")
        bot.set_state(tg_id, MyStates.get_age_chld, cid)


    @bot.message_handler(state=MyStates.get_age_chld)
    def get_level_child(message):
        cid = message.chat.id
        tg_id = message.from_user.id
        with bot.retrieve_data(tg_id, cid) as data:
            data["child_age"] = message.text
        if int(message.text) < 8:
            parent_name = data.get("parent_name")
            bot.send_message(
                cid,
                f"‚ùó{parent_name}, –¥–ª—è –¥–µ—Ç–µ–π –º–ª–∞–¥—à–µ 8-–º–∏ –ª–µ—Ç –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ–µ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ —Å —Ç—Ä–µ–Ω–µ—Ä–æ–º –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è, —Å–º–æ–∂–µ—Ç –ª–∏ —Ä–µ–±–µ–Ω–æ–∫ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ –ª–æ—à–∞–¥–∏, –∞ –Ω–µ –ø–æ–Ω–∏!",
            )
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True, row_width=2)
            btn1 = types.KeyboardButton("–ù–µ—Ç –æ–ø—ã—Ç–∞ –≤–µ—Ä—Ö–æ–≤–æ–π –µ–∑–¥—ã")
            btn2 = types.KeyboardButton("–ù–∞—á–∞–ª—å–Ω—ã–π: —à–∞–≥")
            btn3 = types.KeyboardButton("–°—Ä–µ–¥–Ω–∏–π: —à–∞–≥ + —Ä—ã—Å—å")
            btn4 = types.KeyboardButton("–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π: –≤—Å–µ 3 –∞–ª–ª—é—Ä–∞")
            markup.add(btn1, btn2, btn3, btn4)
            bot.send_message(
                cid, "–ö–∞–∫–æ–π —É—Ä–æ–≤–µ–Ω—å –≤–µ—Ä—Ö–æ–≤–æ–π –µ–∑–¥—ã —É –í–∞—à–µ–≥–æ —Ä–µ–±–µ–Ω–∫–∞?", reply_markup=markup
            )
            bot.set_state(tg_id, MyStates.get_level_chld, cid)
        else:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True, row_width=2)
            btn1 = types.KeyboardButton("–ù–µ—Ç –æ–ø—ã—Ç–∞ –≤–µ—Ä—Ö–æ–≤–æ–π –µ–∑–¥—ã")
            btn2 = types.KeyboardButton("–ù–∞—á–∞–ª—å–Ω—ã–π: —à–∞–≥")
            btn3 = types.KeyboardButton("–°—Ä–µ–¥–Ω–∏–π: —à–∞–≥ + —Ä—ã—Å—å")
            btn4 = types.KeyboardButton("–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π: –≤—Å–µ 3 –∞–ª–ª—é—Ä–∞")
            markup.add(btn1, btn2, btn3, btn4)
            bot.send_message(
                cid, "–ö–∞–∫–æ–π —É—Ä–æ–≤–µ–Ω—å –≤–µ—Ä—Ö–æ–≤–æ–π –µ–∑–¥—ã —É –í–∞—à–µ–≥–æ —Ä–µ–±–µ–Ω–∫–∞?", reply_markup=markup
            )
            bot.set_state(tg_id, MyStates.get_level_chld, cid)


    @bot.message_handler(state=MyStates.get_level_chld)
    def get_schedule_child(message):
        cid = message.chat.id
        tg_id = message.from_user.id
        with bot.retrieve_data(tg_id, cid) as data:
            data["child_level"] = message.text
        ask_for_schedule_child(message)


    @bot.callback_query_handler(state=MyStates.get_schedule_chld, func=lambda call: True)
    def child_schedule_selection(call):
        cid = call.message.chat.id
        tg_id = call.from_user.id
        with bot.retrieve_data(tg_id, cid) as data:
            selected = data.get("selected_schedule", [])
            if call.data == "schedule_done":
                if not selected:
                    # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å "—á–∞—Å–∏–∫–∏" –Ω–∞ –∫–Ω–æ–ø–∫–µ
                    bot.answer_callback_query(
                        call.id,
                        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –≤–∞—Ä–∏–∞–Ω—Ç.",
                        show_alert=True,
                    )
                    return
                bot.send_message(cid, "–ù–∞–ø–∏—à–∏—Ç–µ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –∑–∞–Ω—è—Ç–∏–π –≤ —Ñ–æ—Ä–º–∞—Ç–µ —á—á:–º–º:")
                bot.set_state(tg_id, MyStates.get_time_chld, cid)
                return
            item_name = call.data.split("_")[1]

            if item_name in selected:
                selected.remove(item_name)  # –ï—Å–ª–∏ —É–∂–µ –≤—ã–±—Ä–∞–Ω - —É–±–∏—Ä–∞–µ–º
            else:
                selected.append(item_name)  # –ï—Å–ª–∏ –Ω–µ –≤—ã–±—Ä–∞–Ω - –¥–æ–±–∞–≤–ª—è–µ–º
            data["selected_schedule"] = selected
            updated_markup = generate_schedule_keyboard(selected)
            bot.edit_message_reply_markup(
                chat_id=cid, message_id=call.message.message_id, reply_markup=updated_markup
            )


    @bot.message_handler(state=MyStates.get_time_chld)
    def get_prefers_child(message):
        cid = message.chat.id
        tg_id = message.from_user.id
        with bot.retrieve_data(tg_id, cid) as data:
            data["child_time"] = message.text
        bot.send_message(
            cid,
            "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –í–∞—à–µ–º —Ä–µ–±–µ–Ω–∫–µ: –∂–µ–ª–∞–µ–º–∞—è —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è, —Ç—Ä–∞–≤–º—ã, —Å—Ç—Ä–∞—Ö–∏ –∏ –¥—Ä.",
        )
        bot.set_state(tg_id, MyStates.get_prefers_chld, cid)


    @bot.message_handler(state=MyStates.get_prefers_chld)
    def end_faq_child(message):
        cid = message.chat.id
        tg_id = message.from_user.id
        username = message.from_user.username
        markup = types.InlineKeyboardMarkup()
        sign_button = types.InlineKeyboardButton("–ó–∞–ø–∏—Å–∞—Ç—å –Ω–∞ –ø—Ä–æ–±–Ω—É—é —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É", callback_data=f"trial_signup:{tg_id}")
        markup.add(sign_button)
        # –î–û–ü–ò–°–ê–¢–¨ –ö–û–î –° –ö–ù–û–ö–û–ô –ó–ê–ü–ò–°–ê–¢–¨ –ù–ê –ü–†–û–ë–ù–£–Æ –¢–†–ï–ù–ò–†–û–í–ö–£
        with bot.retrieve_data(tg_id, cid) as data:
            data["child_prefers"] = message.text
            if username:
                user_info = f"(@{username})"
            admin_message = (
                f"üîî –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –∑–∞–Ω—è—Ç–∏–µ!\n\n"
                f"–ù–∏–∫ –≤ —Ç–≥: @{user_info}\n"
                f"ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {tg_id}\n"
                "----------------------------------\n"
                f"{data.get('person')}\n"
                f"–ò–º—è —Ä–æ–¥–∏—Ç–µ–ª—è: {data.get('parent_name', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
                f"–ò–º—è —Ä–µ–±–µ–Ω–∫–∞: {data.get('child_name', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
                f"–í–æ–∑—Ä–∞—Å—Ç —Ä–µ–±–µ–Ω–∫–∞: {data.get('child_age', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
                f"–£—Ä–æ–≤–µ–Ω—å: {data.get('child_level', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
                f"–î–Ω–∏ –Ω–µ–¥–µ–ª–∏: {', '.join(data.get('selected_schedule', ['–Ω–µ —É–∫–∞–∑–∞–Ω–æ']))}\n"
                f"–í—Ä–µ–º—è: {data.get('child_time', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
                f"–ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è: {data.get('child_prefers', '–Ω–µ—Ç')}"
                )
            bot.send_message(ADMIN_ID, admin_message, reply_markup=markup)
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô")
        markup.add(btn1)
        bot.send_message(
            cid,
            "–û–ø—Ä–æ—Å –ø—Ä–æ–π–¥–µ–Ω! –ë–ª–∞–≥–æ–¥–∞—Ä—é –∑–∞ –í–∞—à–∏ –æ—Ç–≤–µ—Ç—ã. –í –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è —Ç—Ä–µ–Ω–µ—Ä —Å –í–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è!",
            reply_markup=markup,
        )
        bot.delete_state(tg_id, cid)


    def ask_for_schedule_child(message):
        cid = message.chat.id
        tg_id = message.from_user.id
        with bot.retrieve_data(tg_id, cid) as data:
            data["selected_schedule"] = []
        initial_markup = generate_schedule_keyboard([])
        bot.send_message(
            cid,
            "–í—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω—ã–µ –¥–Ω–∏ –Ω–µ–¥–µ–ª–∏ –¥–ª—è –∑–∞–Ω—è—Ç–∏–π (–º–æ–∂–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤)\n–°–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –¥–Ω–∏ –Ω–µ–¥–µ–ª–∏, –≤ –∫–æ—Ç–æ—Ä—ã–µ —É–¥–æ–±–Ω–æ –ø–æ—Å–µ—â–∞—Ç—å –∑–∞–Ω—è—Ç–∏—è, –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É '–ì–æ—Ç–æ–≤–æ'",
            reply_markup=initial_markup,
        )
        bot.set_state(tg_id, MyStates.get_schedule_chld, cid)